#
# build the game on pushes to main
#

name: Run a multi os build on pushes to main
on:
  workflow_dispatch:
  push:
    branches:
      - main
# check write permissions are required for junit step
permissions:
    contents: read
    checks: write
    id-token: write
jobs:
  linux:
    runs-on: ubuntu-latest
    timeout-minutes: 900
    steps:
      - uses: actions/checkout@v2      
      - id: godot-linux
        name: download godot
        uses: ./.github/actions/linux/download-godot
        with:
          version: ${{ vars.GODOT_VERSION }}
      - name: download export templates
        uses: ./.github/actions/linux/download-export-templates
        with:
          version: ${{ vars.GODOT_VERSION }}
      - name: export game
        uses: ./.github/actions/linux/export
        with:
          binary: ${{ steps.godot-linux.outputs.godot-bin }}
          preset: "linux"
          filename: "test.bin"
  mac:
    runs-on: macos-latest
    timeout-minutes: 900
    steps:
      - uses: actions/checkout@v2      
      - id: download-mac
        name: download godot
        uses: ./.github/actions/mac/download-godot
        with:
          version: ${{ vars.GODOT_VERSION }}
      - name: download export templates
        uses: ./.github/actions/mac/download-export-templates
        with:
          version: ${{ vars.GODOT_VERSION }}
      # - name: export game
      #   uses: ./.github/actions/mac/export
      #   with:
      #     binary: ${{ steps.download-mac.outputs.godot-bin }}
      #     preset: "mac"
      #     filename: "test.dmg"
  windows:
    runs-on: windows-latest
    timeout-minutes: 900
    steps:
      - uses: actions/checkout@v2      
      - id: download-windows
        name: download godot
        uses: ./.github/actions/windows/download-godot
        with:
          version: ${{ vars.GODOT_VERSION }}
      - name: download export templates
        uses: ./.github/actions/windows/download-export-templates
        with:
          version: ${{ vars.GODOT_VERSION }}
      # - name: export game
      #   uses: ./.github/actions/windows/export
      #   with:
      #     binary: ${{ steps.download-windows.outputs.godot-bin }}
      #     preset: "mac"
      #     filename: "test.dmg"
  web:
    runs-on: ubuntu-latest
    timeout-minutes: 900
    steps:
      - uses: actions/checkout@v2      
      - id: download-web
        name: download godot
        uses: ./.github/actions/linux/download-godot
        with:
          version: ${{ vars.GODOT_VERSION }}
      - name: download export templates
        uses: ./.github/actions/linux/download-export-templates
        with:
          version: ${{ vars.GODOT_VERSION }}
      # - name: export game
      #   uses: ./.github/actions/linux/export
      #   with:
      #     binary: ${{ steps.download-web.outputs.godot-bin }}
      #     preset: "mac"
      #     filename: "test.dmg"
