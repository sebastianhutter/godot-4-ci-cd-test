#
# build the game on pushes to main
#

name: Create a release on tag creation
on:
  # TODO: remove workflow dispatch
  workflow_dispatch:
  push:
    tags:
      - v*
# check write permissions are required for junit step
permissions:
    contents: write
    checks: write
    id-token: write
jobs:
  linux:
    runs-on: ubuntu-latest
    timeout-minutes: 900
    steps:
      - uses: actions/checkout@v2      
      - id: godot-linux
        name: download godot
        uses: ./.github/actions/linux/download-godot
        with:
          version: ${{ vars.GODOT_VERSION }}
      - name: download export templates
        uses: ./.github/actions/linux/download-export-templates
        with:
          version: ${{ vars.GODOT_VERSION }}
      - name: export game
        uses: ./.github/actions/linux/export
        with:
          binary: ${{ steps.godot-linux.outputs.godot-bin }}
          preset: "linux"
          filename: "test.bin"
  # mac:
  #   runs-on: macos-latest
  #   timeout-minutes: 900
  #   steps:
  #     - uses: actions/checkout@v2      
  #     - id: download-mac
  #       name: download godot
  #       uses: ./.github/actions/mac/download-godot
  #       with:
  #         version: ${{ vars.GODOT_VERSION }}
  #     - name: download export templates
  #       uses: ./.github/actions/mac/download-export-templates
  #       with:
  #         version: ${{ vars.GODOT_VERSION }}
  #     - name: export game
  #       uses: ./.github/actions/mac/export
  #       with:
  #         binary: ${{ steps.download-mac.outputs.godot-bin }}
  #         preset: "mac"
  #         filename: "test.dmg"
  # windows:
  #   runs-on: windows-latest
  #   timeout-minutes: 900
  #   steps:
  #     - uses: actions/checkout@v2      
  #     - id: download-windows
  #       name: download godot
  #       uses: ./.github/actions/windows/download-godot
  #       with:
  #         version: ${{ vars.GODOT_VERSION }}
  #     - name: download export templates
  #       uses: ./.github/actions/windows/download-export-templates
  #       with:
  #         version: ${{ vars.GODOT_VERSION }}
  #     - name: export game
  #       uses: ./.github/actions/windows/export
  #       with:
  #         binary: ${{ steps.download-windows.outputs.godot-bin }}
  #         preset: "windows"
  #         filename: "test.exe"
  # web:
  #   runs-on: ubuntu-latest
  #   timeout-minutes: 900
  #   steps:
  #     - uses: actions/checkout@v2      
  #     - id: download-web
  #       name: download godot
  #       uses: ./.github/actions/linux/download-godot
  #       with:
  #         version: ${{ vars.GODOT_VERSION }}
  #     - name: download export templates
  #       uses: ./.github/actions/linux/download-export-templates
  #       with:
  #         version: ${{ vars.GODOT_VERSION }}
  #     - name: export game
  #       uses: ./.github/actions/linux/export
  #       with:
  #         binary: ${{ steps.download-web.outputs.godot-bin }}
  #         preset: "web"
  #         filename: "test.html"
  release:
    needs: [linux]
    #needs: [linux, mac, windows, web]
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - uses: actions/download-artifact@v3
    # - uses: actions/download-artifact@v4
    #   with:
    #     name: test.dmg
    #     path: test.dmg
    # - uses: actions/download-artifact@v4
    #   with:
    #     name: test.exe
    #     path: test.exe
    # - uses: actions/download-artifact@v4
    #   with:
    #     name: test.html
    #     path: test.html
    - name: Display structure of downloaded files
      run: ls -R
      # - name: Create Release
      #   id: create_release
      #   uses: softprops/action-gh-release@v1
      #   env:
      #     GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      #   with:
      #     files: ////